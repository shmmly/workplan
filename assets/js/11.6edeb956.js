(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{184:function(t,e,a){"use strict";a.r(e);var v=a(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"框架和类库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架和类库","aria-hidden":"true"}},[t._v("#")]),t._v(" 框架和类库")]),t._v(" "),a("h2",{attrs:{id:"typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript","aria-hidden":"true"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),a("ul",[a("li",[t._v("理解泛型、接口等面向对象的相关概念，TypeScript对面向对象理念的实现")]),t._v(" "),a("li",[t._v("理解使用TypeScript的好处，掌握TypeScript基础语法")]),t._v(" "),a("li",[t._v("TypeScript的规则检测原理")]),t._v(" "),a("li",[t._v("可以在React、Vue等框架中使用TypeScript进行开发")])]),t._v(" "),a("h2",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[t._v("#")]),t._v(" React")]),t._v(" "),a("ul",[a("li",[t._v("React和vue选型和优缺点、核心架构的区别")]),t._v(" "),a("li",[t._v("React中setState的执行机制，如何有效的管理状态")]),t._v(" "),a("li",[t._v("React的事件底层实现机制")]),t._v(" "),a("li",[t._v("React的虚拟DOM和Diff算法的内部实现")]),t._v(" "),a("li",[t._v("React的Fiber工作原理，解决了什么问题")]),t._v(" "),a("li",[t._v("React Router和Vue Router的底层实现原理、动态加载实现原理")]),t._v(" "),a("li",[t._v("可熟练应用React API、生命周期等，可应用HOC、render props、Hooks等高阶用法解决问题")]),t._v(" "),a("li",[t._v(".基于React的特性和原理，可以手动实现一个简单的React")])]),t._v(" "),a("h2",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),a("ul",[a("li",[t._v("熟练使用Vue的API、生命周期、钩子函数")]),t._v(" "),a("li",[t._v("MVVM框架设计理念")]),t._v(" "),a("li",[t._v("Vue双向绑定实现原理、Diff算法的内部实现")]),t._v(" "),a("li",[t._v("Vue的事件机制")]),t._v(" "),a("li",[t._v("从template转换成真实DOM的实现机制")])]),t._v(" "),a("h2",{attrs:{id:"多端开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多端开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 多端开发")]),t._v(" "),a("ul",[a("li",[t._v("单页面应用（SPA）的原理和优缺点，掌握一种快速开发SPA的方案")]),t._v(" "),a("li",[t._v("理解Viewport、em、rem的原理和用法，分辨率、px、ppi、dpi、dp的区别和实际应用")]),t._v(" "),a("li",[t._v("移动端页面适配解决方案、不同机型适配方案")]),t._v(" "),a("li",[t._v("掌握一种JavaScript移动客户端开发技术，如React Native：可以搭建React Native开发环境，熟练进行开发，可理解React Native的运作原理，不同端适配")]),t._v(" "),a("li",[t._v("掌握一种JavaScript PC客户端开发技术，如Electron：可搭建Electron开发环境，熟练进行开发，可理解Electron的运作原理")]),t._v(" "),a("li",[t._v("掌握一种小程序开发框架或原生小程序开发")]),t._v(" "),a("li",[t._v("理解多端框架的内部实现原理，至少了解一个多端框架的使用")])]),t._v(" "),a("h2",{attrs:{id:"数据流管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据流管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据流管理")]),t._v(" "),a("ul",[a("li",[t._v("掌握React和Vue传统的跨组件通信方案，对比采用数据流管理框架的异同")]),t._v(" "),a("li",[t._v("熟练使用Redux管理数据流，并理解其实现原理，中间件实现原理")]),t._v(" "),a("li",[t._v("熟练使用Mobx管理数据流，并理解其实现原理，相比Redux有什么优势")]),t._v(" "),a("li",[t._v("熟练使用Vuex管理数据流，并理解其实现原理")]),t._v(" "),a("li",[t._v("以上数据流方案的异同和优缺点，不情况下的技术选型")])]),t._v(" "),a("h2",{attrs:{id:"实用库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实用库","aria-hidden":"true"}},[t._v("#")]),t._v(" 实用库")]),t._v(" "),a("ul",[a("li",[t._v("至少掌握一种UI组件框架，如antd design，理解其设计理念、底层实现")]),t._v(" "),a("li",[t._v("掌握一种图表绘制框架，如Echart，理解其设计理念、底层实现，可以自己实现图表")]),t._v(" "),a("li",[t._v("掌握一种GIS开发框架，如百度地图API")]),t._v(" "),a("li",[t._v("掌握一种可视化开发框架，如Three.js、D3")]),t._v(" "),a("li",[t._v("工具函数库，如lodash、underscore、moment等，理解使用的工具类或工具函数的具体实现原理")])]),t._v(" "),a("h2",{attrs:{id:"开发和调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发和调试","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发和调试")]),t._v(" "),a("ul",[a("li",[t._v("熟练使用各浏览器提供的调试工具")]),t._v(" "),a("li",[t._v("熟练使用一种代理工具实现请求代理、抓包，如charls")]),t._v(" "),a("li",[t._v("可以使用Android、IOS模拟器进行调试，并掌握一种真机调试方案")]),t._v(" "),a("li",[t._v("了解Vue、React等框架调试工具的使用")])])])}],!1,null,null,null);_.options.__file="frame.md";e.default=_.exports}}]);