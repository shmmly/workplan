(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{186:function(t,e,i){"use strict";i.r(e);var n=i(0),l=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"执行机制"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#执行机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行机制")]),t._v(" "),i("ul",[i("li",[t._v("为何try里面放return，finally还会执行，理解其内部机制")]),t._v(" "),i("li",[t._v("JavaScript如何实现异步编程，可以详细描述EventLoop机制")]),t._v(" "),i("li",[t._v("宏任务和微任务分别有哪些")]),t._v(" "),i("li",[t._v("可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法")]),t._v(" "),i("li",[t._v("使用Promise实现串行")]),t._v(" "),i("li",[t._v("Node与浏览器EventLoop的差异")]),t._v(" "),i("li",[t._v("如何在保证页面运行流畅的情况下处理海量数据")])])])}],!1,null,null,null);l.options.__file="execution.md";e.default=l.exports}}]);