(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{168:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("Component 的三种创建方式")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("这里我们用一个Loading的组件例子来演示用法")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),n("p",[t._v("这里我们使用了React.Component,这是es6的写法，可以看到我们handleClick方法也使用es6语法，\n这样大大的减少了代码量，提高了可读性。")]),t._v(" "),n("p",[t._v("在React.Component 中，如果要使用默认的props 区别于React.createClass")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),n("p",[t._v("这个例子中我们使用了es6的解构、默认赋值、箭头函数等语法，\n可以看到无状态组件的写法非常的简单，这意味着他并不管理任何的状态，只需要接收\n父组件传递的props来展示props的内容就够了")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),n("p",[t._v("如果要学会用这个组件，首先我们需要理解下它的原理,先看下下面这段代码")]),t._v(" "),t._m(12),n("p",[t._v("运行之后，我们发现无论怎么点击，li的数量都没有发送改变，那么是什么原因呢？\n让我们整理下思路哈哈~·")]),t._v(" "),n("p",[t._v("在我们react中，如果执行setState操作，那么下面的生命周期应该是shouldComponentUpdate,\n这个方法返回true或者false，来执行下面的操作，决定是否进行render操作。\n那么我们大胆的假设下，现在li 没有减少 是不是由于没有进行render操作，所以shouldComponentUpdate 肯定返回的就是一个false，\n如果我们在上面的代码中，重写所以shouldComponentUpdate 并返回true，然后我们继续运行下,可以发现，li 正常的减少了\n如果你在PureComponent 组件中使用了所以shouldComponentUpdate生命周期，react也会出现这样的提示")]),t._v(" "),t._m(13),t._v(" "),n("p",[t._v("大意就是，你都用PureComponent组件了，你还去实现shouldComponentUpdate 这个生命周期，干嘛不直接用Component组件呢~~好吧确实有点多此一举的赶脚!!")]),t._v(" "),n("p",[t._v("这里推荐一篇文件，讲解了PureComponent的一些知识"),n("a",{attrs:{href:"http://www.wulv.site/2017-05-31/react-purecomponent.html",target:"_blank",rel:"noopener noreferrer",default:"[object Object]"}},[t._v("PureComponent"),n("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"component"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#component","aria-hidden":"true"}},[this._v("#")]),this._v(" Component")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("React.createClass 最原始的写法")]),this._v(" "),e("li",[this._v("React.Component es6的写法")]),this._v(" "),e("li",[this._v("React.SFC 无状态组件的写法")]),this._v(" "),e("li",[this._v("React.PureComponent 纯组件，是优化react的一个重要方法之一")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"react-createclass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-createclass","aria-hidden":"true"}},[this._v("#")]),this._v(" React.createClass")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("这个方法很尴尬，本来想新建一个项目使用这个方法，来演示下用法的，\n但是启动之后发现，提示 createClass is not a function,才发现\n最新的react已经不支持这种写法了。所以这里就不贴例子了，有兴趣的可以百度或者google下用法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"react-component"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-component","aria-hidden":"true"}},[this._v("#")]),this._v(" React.Component")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-chef extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('import React from "react";\nimport logo from "../../logo.svg";\nimport "./index.css";\n\nexport default class Loading extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: this.props.Loading\n        };\n    }\n\n    handleClick = e => {\n        setTimeout(() => {\n            this.setState({\n                loading: !this.state.loading\n            });\n        }, 1000)\n    };\n\n    render() {\n        const {loading} = this.state;\n        return (\n            <div>\n                {loading ? (\n                    <img src={logo} className="App-logo" alt="logo"/>\n                ) : (\n                    "数据加载完毕"\n                )}\n                <button onClick={this.handleClick}>点击加载数据</button>\n            </div>\n        );\n    }\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("在React.createClass 中，我们需要使用getDefaultProps 这个方法来实现默认的props\n而在React.Component 中，我们可以直接使用 static defaultProps 这个静态变量来定义 默认的props")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),e("p",[this._v("这个例子中我们没有使用props，而是使用了state在管理自身的状态。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"react-sfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-sfc","aria-hidden":"true"}},[this._v("#")]),this._v(" React.SFC")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-chef extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('import logo from "../../logo.svg"\nimport React from "react"\n\nconst Loading  = ({loading=false})=>(\n    <div>\n        {loading?(<div>\n            <img src={logo} className="App-logo" alt="logo"/>\n        </div>) :(\'数据加载完毕\')}\n    </div>\n)\n\nexport default Loading\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("需要注意的是无状态组件不支持ref属性，因为在调用之前，组件并不会被初始化。所以没有办法使用ref来获取组件中的dom属性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"react-purecomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-purecomponent","aria-hidden":"true"}},[this._v("#")]),this._v(" React.PureComponent")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-chef extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('import React from "react"\nexport default  class Todo extends  React.PureComponent{\n    constructor(props){\n        super(props)\n        this.state = {\n            items:[1,2,3,4]\n        }\n    }\n    handleClick=()=>{\n        const {items} = this.state\n        items.pop()\n        this.setState({\n            items\n        })\n    }\n    render(){\n        return (\n            <div>\n                <ul>\n                    {this.state.items.map((item,index)=>(\n                        <li key={index}>{item}</li>\n                    ))}\n                </ul>\n                <button onClick={this.handleClick}>delete</button>\n            </div>\n        )\n    }\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("index.js:2178 Warning: Todo has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent.\nPlease extend React.Component if shouldComponentUpdate is used.")])])}],!1,null,null,null);a.options.__file="component.md";e.default=a.exports}}]);