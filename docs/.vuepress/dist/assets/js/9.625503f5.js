(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{164:function(_,v,i){"use strict";i.r(v);var e=i(0),t=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var _=this,v=_.$createElement,i=_._self._c||v;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"运行环境"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#运行环境","aria-hidden":"true"}},[_._v("#")]),_._v(" 运行环境")]),_._v(" "),i("h2",{attrs:{id:"浏览器api"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#浏览器api","aria-hidden":"true"}},[_._v("#")]),_._v(" 浏览器API")]),_._v(" "),i("ul",[i("li",[_._v("浏览器提供的符合W3C标准的DOM操作API、浏览器差异、兼容性")]),_._v(" "),i("li",[_._v("浏览器提供的浏览器对象模型 (BOM)提供的所有全局API、浏览器差异、兼容性")]),_._v(" "),i("li",[_._v("大量DOM操作、海量数据的性能优化(合并操作、Diff、requestAnimationFrame等)")]),_._v(" "),i("li",[_._v("浏览器海量数据存储、操作性能优化")]),_._v(" "),i("li",[_._v("DOM事件流的具体实现机制、不同浏览器的差异、事件代理")]),_._v(" "),i("li",[_._v("前端发起网络请求的几种方式及其底层实现、可以手写原生ajax、fetch、可以熟练使用第三方库")]),_._v(" "),i("li",[_._v("浏览器的同源策略，如何避免同源策略，几种方式的异同点以及如何选型")]),_._v(" "),i("li",[_._v("浏览器提供的几种存储机制、优缺点、开发中正确的选择")]),_._v(" "),i("li",[_._v("浏览器跨标签通信")])]),_._v(" "),i("h2",{attrs:{id:"浏览器原理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#浏览器原理","aria-hidden":"true"}},[_._v("#")]),_._v(" 浏览器原理")]),_._v(" "),i("ul",[i("li",[_._v("各浏览器使用的JavaScript引擎以及它们的异同点、如何在代码中进行区分")]),_._v(" "),i("li",[_._v("请求数据到请求结束与服务器进行了几次交互")]),_._v(" "),i("li",[_._v("可详细描述浏览器从输入URL到页面展现的详细过程")]),_._v(" "),i("li",[_._v("浏览器解析HTML代码的原理，以及构建DOM树的流程")]),_._v(" "),i("li",[_._v("浏览器如何解析CSS规则，并将其应用到DOM树上")]),_._v(" "),i("li",[_._v("浏览器如何将解析好的带有样式的DOM树进行绘制")]),_._v(" "),i("li",[_._v("浏览器的运行机制，如何配置资源异步同步加载")]),_._v(" "),i("li",[_._v("浏览器回流与重绘的底层原理，引发原因，如何有效避免")]),_._v(" "),i("li",[_._v("浏览器的垃圾回收机制，如何避免内存泄漏")]),_._v(" "),i("li",[_._v("浏览器采用的缓存方案，如何选择和控制合适的缓存方案")])]),_._v(" "),i("h2",{attrs:{id:"node"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#node","aria-hidden":"true"}},[_._v("#")]),_._v(" Node")]),_._v(" "),i("ul",[i("li",[_._v("理解Node在应用程序中的作用，可以使用Node搭建前端运行环境、使用Node操作文件、操作数据库等等")]),_._v(" "),i("li",[_._v("掌握一种Node开发框架，如Express，Express和Koa的区别")]),_._v(" "),i("li",[_._v("熟练使用Node提供的API如Path、Http、Child Process等并理解其实现原理")]),_._v(" "),i("li",[_._v("Node的底层运行原理、和浏览器的异同")]),_._v(" "),i("li",[_._v("Node事件驱动、非阻塞机制的实现原理")])])])}],!1,null,null,null);t.options.__file="environment.md";v.default=t.exports}}]);