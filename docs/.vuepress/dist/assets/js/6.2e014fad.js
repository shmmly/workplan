(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{181:function(a,t,i){"use strict";i.r(t);var v=i(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"数据结构和算法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据结构和算法")]),a._v(" "),i("h2",{attrs:{id:"javascript编码能力"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#javascript编码能力","aria-hidden":"true"}},[a._v("#")]),a._v(" JavaScript编码能力")]),a._v(" "),i("ul",[i("li",[a._v("多种方式实现数组去重、扁平化、对比优缺点")]),a._v(" "),i("li",[a._v("多种方式实现深拷贝、对比优缺点")]),a._v(" "),i("li",[a._v("手写函数柯里化工具函数、并理解其应用场景和优势")]),a._v(" "),i("li",[a._v("手写防抖和节流工具函数、并理解其内部原理和应用场景")]),a._v(" "),i("li",[a._v("实现一个sleep函数")])]),a._v(" "),i("h2",{attrs:{id:"手动实现前端轮子"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#手动实现前端轮子","aria-hidden":"true"}},[a._v("#")]),a._v(" 手动实现前端轮子")]),a._v(" "),i("ul",[i("li",[a._v("手动实现call、apply、bind")]),a._v(" "),i("li",[a._v("手动实现符合Promise/A+规范的Promise、手动实现async await")]),a._v(" "),i("li",[a._v("手写一个EventEmitter实现事件发布、订阅")]),a._v(" "),i("li",[a._v("可以说出两种实现双向绑定的方案、可以手动实现")]),a._v(" "),i("li",[a._v("手写JSON.stringify、JSON.parse")]),a._v(" "),i("li",[a._v("手写一个模版引擎，并能解释其中原理")]),a._v(" "),i("li",[a._v("手写懒加载、下拉刷新、上拉加载、预加载等效果")])]),a._v(" "),i("h2",{attrs:{id:"数据结构"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#数据结构","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据结构")]),a._v(" "),i("ul",[i("li",[a._v("理解常见数据结构的特点，以及他们在不同场景下使用的优缺点")]),a._v(" "),i("li",[a._v("理解数组、字符串的存储原理，并熟练应用他们解决问题")]),a._v(" "),i("li",[a._v("理解二叉树、栈、队列、哈希表的基本结构和特点，并可以应用它解决问题")]),a._v(" "),i("li",[a._v("了解图、堆的基本结构和使用场景")])]),a._v(" "),i("h2",{attrs:{id:"算法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 算法")]),a._v(" "),i("ul",[i("li",[a._v("可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗")]),a._v(" "),i("li",[a._v("至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度")]),a._v(" "),i("li",[a._v("了解递归和循环的优缺点、应用场景、并可在开发中熟练应用")]),a._v(" "),i("li",[a._v("可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题")]),a._v(" "),i("li",[a._v("前端处理海量数据的算法方案")])])])}],!1,null,null,null);_.options.__file="arithmetic.md";t.default=_.exports}}]);